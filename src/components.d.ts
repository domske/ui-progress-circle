/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { SvgLineCap } from "./components/progress-circle/progress-circle";
export namespace Components {
    interface UiProgressCircle {
        /**
          * The circle color. Use predefined colors like `info`, `success`, `warning` or `danger` or a custom color like `#123456` or `yellow`.
         */
        "color": string;
        /**
          * The circle radius in percent. The default size is 200px (radius 100px) but scaled to 100% of parent.
         */
        "radius": number;
        /**
          * The line cap shape. For example: `round`.
         */
        "shape": SvgLineCap;
        /**
          * The line width in percent. If stroke >= radius then circle is filled (pie).
         */
        "stroke": number;
        /**
          * The progress value in percent. Use -1 or undefined for indeterminate loading animation.
         */
        "value": number;
    }
}
declare global {
    interface HTMLUiProgressCircleElement extends Components.UiProgressCircle, HTMLStencilElement {
    }
    var HTMLUiProgressCircleElement: {
        prototype: HTMLUiProgressCircleElement;
        new (): HTMLUiProgressCircleElement;
    };
    interface HTMLElementTagNameMap {
        "ui-progress-circle": HTMLUiProgressCircleElement;
    }
}
declare namespace LocalJSX {
    interface UiProgressCircle {
        /**
          * The circle color. Use predefined colors like `info`, `success`, `warning` or `danger` or a custom color like `#123456` or `yellow`.
         */
        "color"?: string;
        /**
          * The circle radius in percent. The default size is 200px (radius 100px) but scaled to 100% of parent.
         */
        "radius"?: number;
        /**
          * The line cap shape. For example: `round`.
         */
        "shape"?: SvgLineCap;
        /**
          * The line width in percent. If stroke >= radius then circle is filled (pie).
         */
        "stroke"?: number;
        /**
          * The progress value in percent. Use -1 or undefined for indeterminate loading animation.
         */
        "value"?: number;
    }
    interface IntrinsicElements {
        "ui-progress-circle": UiProgressCircle;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "ui-progress-circle": LocalJSX.UiProgressCircle & JSXBase.HTMLAttributes<HTMLUiProgressCircleElement>;
        }
    }
}
